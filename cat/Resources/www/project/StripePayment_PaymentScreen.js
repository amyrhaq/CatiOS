/*
 * JS for StripePayment_PaymentScreen generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return '0aa6b59b-95c0-4fe4-845d-4a5b1d8c31f5';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

function adjustContentHeight() {
    Appery.adjustContentHeight();
}

function adjustContentHeightWithPadding() {
    Appery.adjustContentHeightWithPadding();
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "StripePayment_FinalScreen",
    "location": "StripePayment_FinalScreen.html"
}, {
    "name": "StripePayment_PaymentScreen",
    "location": "StripePayment_PaymentScreen.html"
}, {
    "name": "Screen2",
    "location": "Screen2.html"
}, {
    "name": "Screen3",
    "location": "Screen3.html"
}, {
    "name": "TW_Home",
    "location": "TW_Home.html"
}, {
    "name": "TW_SMS_Send",
    "location": "TW_SMS_Send.html"
}, {
    "name": "TW_SMS_Messages",
    "location": "TW_SMS_Messages.html"
}, {
    "name": "TW_SMS_MessageDetails",
    "location": "TW_SMS_MessageDetails.html"
}, {
    "name": "startScreen",
    "location": "startScreen.html"
}];

StripePayment_PaymentScreen_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'cardGrid': 'StripePayment_PaymentScreen_cardGrid',
        'mobilegridcell_4': 'StripePayment_PaymentScreen_mobilegridcell_4',
        'mobilelabel1_8': 'StripePayment_PaymentScreen_mobilelabel1_8',
        'numberInput': 'StripePayment_PaymentScreen_numberInput',
        'mobilegridcell_6': 'StripePayment_PaymentScreen_mobilegridcell_6',
        'mobilegrid_49': 'StripePayment_PaymentScreen_mobilegrid_49',
        'mobilegridcell_50': 'StripePayment_PaymentScreen_mobilegridcell_50',
        'mobilelabel1_17': 'StripePayment_PaymentScreen_mobilelabel1_17',
        'mobilegrid_36': 'StripePayment_PaymentScreen_mobilegrid_36',
        'mobilegridcell_37': 'StripePayment_PaymentScreen_mobilegridcell_37',
        'monthInput': 'StripePayment_PaymentScreen_monthInput',
        'mobilegridcell_38': 'StripePayment_PaymentScreen_mobilegridcell_38',
        'mobilelabel1_56': 'StripePayment_PaymentScreen_mobilelabel1_56',
        'mobilegridcell_41': 'StripePayment_PaymentScreen_mobilegridcell_41',
        'yearInput': 'StripePayment_PaymentScreen_yearInput',
        'mobilegridcell_51': 'StripePayment_PaymentScreen_mobilegridcell_51',
        'mobilegridcell_54': 'StripePayment_PaymentScreen_mobilegridcell_54',
        'mobilegrid_46': 'StripePayment_PaymentScreen_mobilegrid_46',
        'mobilegridcell_47': 'StripePayment_PaymentScreen_mobilegridcell_47',
        'mobilelabel1_20': 'StripePayment_PaymentScreen_mobilelabel1_20',
        'mobilegridcell_48': 'StripePayment_PaymentScreen_mobilegridcell_48',
        'mobileimage_44': 'StripePayment_PaymentScreen_mobileimage_44',
        'codeInput': 'StripePayment_PaymentScreen_codeInput',
        'mobilegrid_59': 'StripePayment_PaymentScreen_mobilegrid_59',
        'mobilegridcell_60': 'StripePayment_PaymentScreen_mobilegridcell_60',
        'errorCardLabel': 'StripePayment_PaymentScreen_errorCardLabel',
        'errorPanel': 'StripePayment_PaymentScreen_errorPanel',
        'paymentGrid': 'StripePayment_PaymentScreen_paymentGrid',
        'mobilegridcell_26': 'StripePayment_PaymentScreen_mobilegridcell_26',
        'mobilelabel1_30': 'StripePayment_PaymentScreen_mobilelabel1_30',
        'amountInput': 'StripePayment_PaymentScreen_amountInput',
        'mobilegridcell_27': 'StripePayment_PaymentScreen_mobilegridcell_27',
        'mobilelabel1_31': 'StripePayment_PaymentScreen_mobilelabel1_31',
        'currencySelect': 'StripePayment_PaymentScreen_currencySelect',
        'currencySelect-0': 'StripePayment_PaymentScreen_currencySelect-0',
        'makeButton': 'StripePayment_PaymentScreen_makeButton'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'StripePayment_PaymentScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    tokenDS = new Appery.DataSource(StripePayment_CardTokenService, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("StripePayment_PaymentScreen");
        },
        'onSuccess': function(data) {
            StripeGlobal.transitServices();
        },
        'onError': function(jqXHR, textStatus, errorThrown) {
            StripeGlobal.locked = false;
            StripeGlobal.handleError(jqXHR);;
        },
        'responseMapping': [{
            'PATH': ['id'],
            'ID': '___js___',
            'ATTR': 'tempToken',
            'TRANSFORMATION': function(value, element) {
                StripePayment_Settings['token'] = value;
            }
        }],
        'requestMapping': [{
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'TRANSFORMATION': function(value) {
                return "Bearer " + StripePayment_Settings['apiKey'];
            }
        }, {
            'PATH': ['card[number]'],
            'TYPE': 'STRING',
            'ID': 'numberInput',
            'ATTR': 'value'
        }, {
            'PATH': ['card[exp_month]'],
            'TYPE': 'STRING',
            'ID': 'monthInput',
            'ATTR': 'value'
        }, {
            'PATH': ['card[exp_year]'],
            'TYPE': 'STRING',
            'ID': 'yearInput',
            'ATTR': 'value'
        }, {
            'PATH': ['card[cvc]'],
            'TYPE': 'STRING',
            'ID': 'codeInput',
            'ATTR': 'value'
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.stripe.com/v1/tokens'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1383502295492'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2726656'
        }]
    });

    datasources.push(tokenDS);

    paymentDS = new Appery.DataSource(StripePayment_ChargeService, {
        'onComplete': function(jqXHR, textStatus) {
            StripeGlobal.locked = false;

            $t.refreshScreenFormElements("StripePayment_PaymentScreen");
        },
        'onSuccess': function(data) {
            StripeGlobal.afterPayment();
        },
        'onError': function(jqXHR, textStatus, errorThrown) {
            StripeGlobal.handleError(jqXHR);
        },
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'TRANSFORMATION': function(value) {
                return "Bearer " + StripePayment_Settings['apiKey'];
            }
        }, {
            'PATH': ['currency'],
            'TYPE': 'STRING',
            'ID': 'currencySelect',
            'ATTR': 'value'
        }, {
            'PATH': ['amount'],
            'TYPE': 'STRING',
            'ID': 'amountInput',
            'ATTR': 'value',
            'TRANSFORMATION': function(value) {
                return Math.floor(value * 100);
            }
        }, {
            'PATH': ['card'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'token',
            'TRANSFORMATION': function(value) {
                return StripePayment_Settings['token'];
            }
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.stripe.com/v1/charges'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1383502295498'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2726657'
        }]
    });

    datasources.push(paymentDS);

    /*
     * Events and handlers
     */

    // Before Show
    StripePayment_PaymentScreen_beforeshow = function() {
        Appery.CurrentScreen = "StripePayment_PaymentScreen";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_C383_onLoad = StripePayment_PaymentScreen_onLoad = function() {
        screen_C383_elementsExtraJS();
        StripeGlobal.initPaymentScreen();
        StripeGlobal.initValidation();

        // TODO fire device events only if necessary (with JS logic)
        StripePayment_PaymentScreen_deviceEvents();
        StripePayment_PaymentScreen_windowEvents();
        screen_C383_elementsEvents();
    }

    // screen window events
    screen_C383_windowEvents = StripePayment_PaymentScreen_windowEvents = function() {

        $('#StripePayment_PaymentScreen').bind('pageshow orientationchange', function() {
            adjustContentHeightWithPadding();
        });
        $('#StripePayment_PaymentScreen').bind({
            pageshow: function() {
                StripeGlobal.clearCardError();;
            },
        });

    }

    // device events
    StripePayment_PaymentScreen_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

        });
    }

    // screen elements extra js
    screen_C383_elementsExtraJS = StripePayment_PaymentScreen_elementsExtraJS = function() {
        // screen (StripePayment_PaymentScreen) extra code

        /* currencySelect */

        $("#StripePayment_PaymentScreen_currencySelect").parent().find("a.ui-btn").attr("tabindex", "7");

    }

    // screen elements handler
    screen_C383_elementsEvents = StripePayment_PaymentScreen_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

        $('#StripePayment_PaymentScreen_paymentContainer [name="mobileimage_44"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    alert('The CVC is the last three digits of the number that appears on the back of your card in the signature bar.');

                }
            },
        });

        $('#StripePayment_PaymentScreen_paymentContainer [name="makeButton"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    StripeGlobal.clearCardError();
                    StripeGlobal.makePayment();

                }
            },
        });

    }

    $("#StripePayment_PaymentScreen").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        StripePayment_PaymentScreen_beforeshow();
    });

    if (runBeforeShow) {
        StripePayment_PaymentScreen_beforeshow();
    } else {
        StripePayment_PaymentScreen_onLoad();
    }

}

$("#StripePayment_PaymentScreen").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    StripePayment_PaymentScreen_js();
});